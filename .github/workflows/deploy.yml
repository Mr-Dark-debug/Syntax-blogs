name: Deploy to GitHub Pages

on:
  push:
    branches: ["main"]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Create gh-pages branch if it doesn't exist
      - name: Create gh-pages branch if needed
        run: |
          # Configure Git identity
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

          if ! git ls-remote --heads origin gh-pages | grep gh-pages; then
            echo "Creating gh-pages branch"
            git checkout --orphan gh-pages
            git reset --hard
            git commit --allow-empty -m "Initial gh-pages commit"
            git push origin gh-pages
            git checkout -
            echo "Created gh-pages branch successfully"
          else
            echo "gh-pages branch already exists"
          fi

      # Enable GitHub Pages with PAT (if available)
      - name: Enable GitHub Pages
        if: ${{ secrets.PERSONAL_ACCESS_TOKEN != '' }}
        env:
          REPO_NAME: "${{ github.repository }}"
          OWNER: "${{ github.repository_owner }}"
          TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          echo "Enabling GitHub Pages for $OWNER/$REPO_NAME"

          # Create GitHub Pages site settings
          echo "Attempting to create GitHub Pages site..."
          STATUS=$(curl -s -o /dev/null -w '%{http_code}' -X POST \
            -H "Authorization: Bearer $TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/$OWNER/$REPO_NAME/pages" \
            -d '{"source":{"branch":"gh-pages","path":"/"}}')

          if [[ "$STATUS" == "201" ]]; then
            echo "GitHub Pages site created successfully"
          elif [[ "$STATUS" == "409" ]]; then
            echo "GitHub Pages site already exists, proceeding with update"
          else
            echo "GitHub Pages creation returned status $STATUS"
            echo "This is not critical, continuing with workflow"
          fi

          # Update GitHub Pages settings to use GitHub Actions
          echo "Attempting to update GitHub Pages settings to use GitHub Actions..."
          STATUS=$(curl -s -o /dev/null -w '%{http_code}' -X PUT \
            -H "Authorization: Bearer $TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/$OWNER/$REPO_NAME/pages" \
            -d '{"build_type":"workflow"}')

          if [[ "$STATUS" == "200" || "$STATUS" == "201" ]]; then
            echo "GitHub Pages settings updated successfully"
          else
            echo "GitHub Pages update returned status $STATUS"
            echo "This is not critical, continuing with workflow"
          fi

      # Fallback message if PAT is not available
      - name: GitHub Pages Setup Notice
        if: ${{ secrets.PERSONAL_ACCESS_TOKEN == '' }}
        run: |
          echo "::warning::No PERSONAL_ACCESS_TOKEN found. GitHub Pages will need to be enabled manually."
          echo "Please follow these steps:"
          echo "1. Go to your repository on GitHub"
          echo "2. Navigate to Settings > Pages"
          echo "3. Under 'Source', select 'GitHub Actions' from the dropdown"
          echo "4. Save the settings"

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: 'npm'

      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          # Try with enablement parameter
          enablement: true

      - name: Install dependencies
        run: npm ci

      - name: Build with Next.js
        run: npm run build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
